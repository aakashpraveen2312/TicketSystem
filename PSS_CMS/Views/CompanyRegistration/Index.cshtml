@model PSS_CMS.Models.Companies
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>REGISTRATION FORM</title>

    @*Bootstrap Link*@
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    @*CSS LINK*@
    <link href="~/Content/Companies.css" rel="stylesheet" />

    <link href="~/assets/img/bexlogo_wob (1).png" rel="icon" />
    <link href="~/assets/img/bexlogo_wob (1).png" rel="apple-touch-icon" />
    @*Toastr*@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <style>
        .swal-btn-continue {
            background-color: #6ed3d0 !important;
            color: white !important;
            border-radius: 5px;
            padding: 8px 20px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container-fluid pb-2" id="navbar">
        <div class="row" id="rownav">
            <div class="col-md-6 col-sm-12 d-flex justify-content-md-start d-flex justify-content-sm-center justify-content-center align-items-center" id="navhead">
                <h2 class="navbar-brand text-center" href="#" id="title">TICKET SYSTEM</h2>
            </div>
            <div class="col-md-6 col-sm-12 d-flex justify-content-md-end justify-content-sm-center justify-content-center" id="imgcol">
                <img src="~/assets/img/bexlogo_wob.png" id="navimg" class="GSTimg" />

            </div>
        </div>
    </div>

    <div class="container my-3">
        <h3 class="text-center spanheadingGST fw-semibold" id="formname">Prospective Customer Registration Form <span id="mainspan">(TICKET SYSTEM)</span></h3>
        <div class="card mt-3">
            @using (Html.BeginForm("Index", "CompanyRegistration", FormMethod.Post, new { id = "regform", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="p-3">
                    <div class="row my-3 ms-2">
                        @Html.LabelFor(model => model.C_CODE, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_CODE, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "1",required= "required" } })
                                @Html.ValidationMessageFor(model => model.C_CODE, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.LabelFor(model => model.C_WEB, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_WEB, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "2", required = "required" } })
                                @Html.ValidationMessageFor(model => model.C_WEB, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row my-3 ms-2">
                        @Html.LabelFor(model => model.C_NAME, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_NAME, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "3", required = "required" } })
                                @Html.ValidationMessageFor(model => model.C_NAME, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.LabelFor(model => model.C_APPUSERNAME, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_APPUSERNAME, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "4", required = "required" } })
                                @Html.ValidationMessageFor(model => model.C_APPUSERNAME, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row my-3 ms-2">
                        @Html.LabelFor(model => model.C_ADDRESS, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_ADDRESS, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "5", required = "required" } })
                                @Html.ValidationMessageFor(model => model.C_ADDRESS, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.LabelFor(model => model.C_EMAILID, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_EMAILID, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "6", required = "required" } })
                                @Html.ValidationMessageFor(model => model.C_EMAILID, "", new { @class = "text-danger" })
                                @if (ViewBag.Errormessage != null)
                                {
                                    <span class="text-danger mb-0">@ViewBag.Errormessage</span>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="row my-3 ms-2">
                        @Html.LabelFor(model => model.C_COUNTRY, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_COUNTRY, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "7", required = "required" } })
                                @Html.ValidationMessageFor(model => model.C_COUNTRY, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.LabelFor(model => model.C_RBICODE, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4 d-flex justify-content-center">
                            @Html.EditorFor(model => model.C_RBICODE, new { htmlAttributes = new { @class = "form-control", value = Guid.NewGuid().ToString(), autocomplete = "off", tabindex = "8", required = "required" } })
                            @Html.ValidationMessageFor(model => model.C_RBICODE, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row my-3 ms-2">
                        @Html.LabelFor(model => model.C_PINCODE, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_PINCODE, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "9", required = "required" } })
                                @Html.ValidationMessageFor(model => model.C_PINCODE, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.LabelFor(model => model.C_GST, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex justify-content-center flex-column">
                                @Html.EditorFor(model => model.C_GST, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "10", required = "required" } })
                                @Html.ValidationMessageFor(model => model.C_GST, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row my-3 ms-2">
                        @Html.LabelFor(model => model.C_PHONE, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_PHONE, new { htmlAttributes = new { @class = "form-control", value = Guid.NewGuid().ToString(), autocomplete = "off", tabindex = "11", required = "required" } })
                                @Html.ValidationMessageFor(model => model.C_PHONE, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.LabelFor(model => model.C_Domain, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-4">
                            <div class="d-flex flex-column">
                                @Html.EditorFor(model => model.C_Domain, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "12", id = "domainName" } })
                                @Html.ValidationMessageFor(model => model.C_Domain, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end mt-2">
                        <button type="submit" class="btn" id="submitbtn" tabindex="13">Submit</button>
                    </div>

                </div>
            }
        </div>
    </div>
    @*Toastr for created succesfully*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
    $(document).ready(function () {
        $("#regform").submit(function (event) {
            event.preventDefault();

            var submitBtn = $("#submitbtn");
            submitBtn.prop("disabled", true).text("Submitting...");

            var formData = new FormData(this);

            // Disable page interaction
            $("body").css("pointer-events", "none");

            $.ajax({
                url: '@Url.Action("Index", "CompanyRegistration")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: "Success!",
                            text: response.message,
                            icon: "success",
                            confirmButtonText: "Ok",
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            customClass: {
                                confirmButton: "swal-btn-continue",
                            },
                            didOpen: () => {
                                $(".swal2-container").css("pointer-events", "auto");
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '@Url.Action("Index", "Login")';
                            } 
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: response.message,
                            icon: "error",
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        });
                        resetButton();
                    }
                },
                error: function () {
                    Swal.fire({
                        title: "Error!",
                        text: "An unexpected error occurred.",
                        icon: "error",
                        allowOutsideClick: false,
                        allowEscapeKey: false
                    });
                    resetButton();
                }
            });
        });

        function resetButton() {
            $("#submitbtn").prop("disabled", false).text("Submit");
            $("body").css("pointer-events", "auto");
        }
    });
    </script>
  
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

</body>
</html>