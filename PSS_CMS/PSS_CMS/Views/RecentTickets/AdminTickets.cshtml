@model PSS_CMS.Models.Admintickets
@using GridMvc.Html
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>


    <link href="~/Content/Style1.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    @*Bootstrap Icons and Boxicons link*@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="..." crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>

<body  id="ticetscreen">
    <div class="">

        <div class="sidebar">
            <a class="text-decoration-none" href="@Url.Action("RecentTicket","RecentTickets")">Recent Tickets</a>
            @*<a href="@Url.Action("Clients","RecentTickets")" class="text-decoration-none">Client</a>*@
            <a href="javascript:void(0);" class="dropdown-btn text-decoration-none">CMS <i class="bi bi-chevron-down dropdown-btn"></i></a>
            <div class="dropdown-container">
                <a href='@Url.Action("Index","RecentTickets")' class="text-decoration-none">Menu</a>
                <a href='@Url.Action("HomeMainContent","RecentTickets")' class="text-decoration-none">Home</a>
                <div class="text-decoration-none servicemenu">
                    <a href='@Url.Action("SubmenuForServices","RecentTickets")' class="text-decoration-none">
                        Services<i class="bi bi-chevron-down dropdown-btns"></i>
                    </a>
                    <div class="submenu" id="submenu-services">
                        <a href='@Url.Action("SubmenuForHRMS","RecentTickets")' class="text-decoration-none">HRMS....</a>

                    </div>
                </div>
                <a href='@Url.Action("Clients","RecentTickets")' class="text-decoration-none">Clients</a>
                <a href='@Url.Action("ClientImageGet","ClientImage", new { section = "Client Section"})' class="text-decoration-none">Client Section</a>

                <a href="#clients" class="text-decoration-none">Gallery</a>
                <a href="#clients" class="text-decoration-none">FAQ</a>
                <a href="#clients" class="text-decoration-none">About</a>
                <a href='@Url.Action("Clients","RecentTickets")' class="text-decoration-none">Contact Us</a>


            </div>
            <a href="@Url.Action("Logout", "Login")" class="text-decoration-none align-baseline" id="logoutlink" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">
                <i class='bx bx-log-out' style="font-size:24px !important;color:red !important;"></i>
                Logout
            </a>
        </div>


        <nav class="nav">
            <h3 class="" id="navheading">TICKET SYSTEM</h3>
        </nav>
        <div class="content mt-2">
            <div class="row" style="margin-top:10px">
                <div class="col-lg-9 col-sm-8">
                    <ul class="breadcrumb">
                        <li style="color: #2888bb;">VERIFY TICKETS</li>

                    </ul>
                </div>


            </div>
            <div class="row">
                <div class="col-md-6">
                    @*Form 1*@

                    <form>
                        <div class="row">
                            <div class="col-md-5 col-sm-5">
                                @Html.LabelFor(model => model.TC_SUBJECT, "Subject:", new { @class = "pb-2" })
                                @Html.TextBoxFor(model => model.TC_SUBJECT, new { @class = "form-control", @readonly = "true", id = "" })
                            </div>
                            <div class="col-md-5 col-sm-5">
                                @Html.LabelFor(model => model.TC_TICKETDATE, "Date:", new { @class = "pb-2" })
                                @Html.TextBoxFor(model => model.TC_TICKETDATE, new { @class = "form-control", @readonly = "true", id = "" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.TC_COMMENTS, "Comments", new { @class = "pb-2" })
                                @Html.TextAreaFor(model => model.TC_COMMENTS, new { @class = "form-control custom-textarea", rows = "10", cols = "70", @readonly = "true" })
                            </div>
                            <div class="col-md-12 mt-3">
                                <h2 class="mt-2">Image Preview</h2>
                                @if (ViewBag.ClientsTicketsIMAGE != null)
                                {
                                    <img src="data:image/png;base64,@ViewBag.ClientsTicketsIMAGE" alt="Ticket Image" class="img-fluid" />
                                }
                            </div>


                        </div>

                    </form>
                </div>

                <div class="col-md-6">
                    @*Form 2*@
                    @using (Html.BeginForm("AdminResponseTicket", "RecentTickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                                <div class="col-md-5 col-sm-5">
                                    @Html.LabelFor(model => model.Date, "Date:", new { @class = "pb-2" })
                                    @Html.TextBoxFor(model => model.Date, new { @class = "form-control", @readonly = "true", id = "dateTextbox" })
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TC_RESPONSE_COMMENTS, "Comments", new { @class = "pb-2" })
                                    @Html.TextAreaFor(model => model.TC_RESPONSE_COMMENTS, new { @class = "form-control custom-textarea", placeholder = "Please enter your comments here....", rows = "10", cols = "70" })
                                </div>
                                <div class="col-md-12 mt-2">
                                    @Html.Label("myfile", "Attachments:")
                                    <input type="file" id="myfile" name="myfile" />
                                </div>



                                <div class="col-md-12 mt-2 d-flex justify-content-end">
                                    <button type="submit" class="btn btn-success me-3">Submit</button>
                                    <button type="button" class="btn btn-danger" onclick="window.location.href='@Url.Action("RecentTicket", "RecentTickets")'">Cancel</button>
                                </div>
                            </div>

                        </form>

                    }
                </div>
            </div>




            <div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel" style="height: 150px;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title text-align-center" id="offcanvasBottomLabel"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body d-flex flex-column justify-content-center align-items-center">
                    <h4>Are you sure you want to log out?</h4>
                </div>
                <div class="offcanvas-footer d-flex justify-content-center">
                    <input type="button" class="btn btn-success me-3" id="confirmLogoutBtn" value="Confirm" tabindex="1">
                    <input type="button" class="btn btn-danger" data-bs-dismiss="offcanvas" value="Cancel" tabindex="2">
                </div>
            </div>
        </div>
    </div>
    <!-- LogOut JS -->
    <script src="~/Scripts/Logoutjs.js"></script>


    <script>
    @* Script for active menu *@

    document.addEventListener("DOMContentLoaded", function () {
        const sidebarLinks = document.querySelectorAll(".sidebar a");

        // Highlight the active link based on the current URL
        sidebarLinks.forEach(link => {
            if (link.href === window.location.href) {
                link.classList.add("active");
            }
        });

        // Add click event to update the active class
        sidebarLinks.forEach(link => {
            link.addEventListener("click", function () {
                // Remove active class from all links
                sidebarLinks.forEach(l => l.classList.remove("active"));

                // Add active class to the clicked link
                this.classList.add("active");
            });
        });
    });


    @* Script for dropdown *@

        document.addEventListener("DOMContentLoaded", function () {
            const dropdownBtn = document.querySelector(".dropdown-btn");
        const dropdownContainer = document.querySelector(".dropdown-container");

        dropdownBtn.addEventListener("click", function () {
            this.classList.toggle("active");
        dropdownContainer.style.display = dropdownContainer.style.display === "block" ? "none" : "block";
            });
        });


    </script>

    <script>
        // JavaScript to set and continuously update the current date and time in 12-hour format
        document.addEventListener("DOMContentLoaded", function () {
            const dateTextbox = document.getElementById("dateTextbox");

            function updateDateTime() {
                const now = new Date();

                // Format the date and time as "YYYY-MM-DD HH:mm:ss AM/PM"
                const year = now.getFullYear();
                const month = String(now.getMonth() + 1).padStart(2, "0");
                const day = String(now.getDate()).padStart(2, "0");

                let hours = now.getHours();
                const minutes = String(now.getMinutes()).padStart(2, "0");
                const seconds = String(now.getSeconds()).padStart(2, "0");

                const ampm = hours >= 12 ? "PM" : "AM"; // Determine AM or PM
                hours = hours % 12; // Convert to 12-hour format
                hours = hours ? hours : 12; // Adjust for midnight (0 becomes 12)

                const formattedDate = `${day}-${month}-${year} ${hours}:${minutes}:${seconds} ${ampm}`;
                dateTextbox.value = formattedDate;
            }

            // Call updateDateTime initially to set the value immediately
            updateDateTime();

            // Update the date and time every second
            setInterval(updateDateTime, 1000);
        });
    </script>


</body>
</html>
