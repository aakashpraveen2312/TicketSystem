@model PSS_CMS.Models.Login
@{
    Layout = null;
    var successMessage = TempData["SuccessMessage"];
    var errorMessage = TempData["ErrorMessage"];
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - PSS</title>
    <!-- Bootstrap CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Add this in your layout file if not already added -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Custom Styles -->
    <link href="~/Content/Login.css" rel="stylesheet" />

</head>
<body onload="hideLoadingScreen()">
    <div id="loadingScreen">
        <div class="loader"></div>
    </div>
    <!-- Centered Sign-in Form -->
    <div class="container vh-100 d-flex justify-content-center align-items-center">
        <div class="row">
            <div class="col">
                <div class="card login-container position-relative d-flex justify-content-center align-items-center">
                     @{
                        var message = TempData["SessionExpired"] as string;
                        if (!string.IsNullOrEmpty(message))
                        {
                            <script>
            Swal.fire({
                icon: 'warning',
                title: 'Session Expired',
                text: '@message',
                timer: 3000,
                showConfirmButton: false
            });
                            </script>
                        }
                    }
                    <!-- Logo -->
                    <img src="~/assets/img/bexlogo_wob(bgremoved.png" alt="PSS Logo" class="logo">

                    <!-- Header -->
                    <h4 class="text-center mb-4">TICKET SYSTEM</h4>
                    <!-- Form -->
                    @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { id = "form" }))
                    {


                        <div class="form-group row mb-3">
                            @Html.LabelFor(model => Model.L_USERNAME, htmlAttributes: new { @class = "control-label col-md-4 label-align" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.L_USERNAME, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "1", type = "text", id = "L_USERNAME" , placeholder = "Email, Code or Mobile number" } })
                                @Html.ValidationMessageFor(model => model.L_USERNAME, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group row mb-3">

                            @Html.LabelFor(model => Model.L_PASSWORD, htmlAttributes: new { @class = "control-label col-md-4 label-align" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.L_PASSWORD, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "2", type = "password", id = "L_PASSWORD" } })
                                @Html.ValidationMessageFor(model => model.L_PASSWORD, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group row mb-3">

                            @Html.LabelFor(model => Model.L_DOMAIN, htmlAttributes: new { @class = "control-label col-md-4 label-align" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.L_DOMAIN, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", tabindex = "2", type = "text", id = "L_DOMAIN" } })
                                @Html.ValidationMessageFor(model => model.L_DOMAIN, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <!-- Forgot Password -->
                        <div class="forgot-password">
                            <a href="@Url.Action("Forgotpassword", "Forgotpassword")" class="text-decoration-none">Forgot Password?</a>
                        </div>
                        <!-- Login Button -->
                        <div class="d-flex justify-content-center mt-2 gap-3">
                            <button type="submit" class="btn-login btn-sm" tabindex="4">Login</button>

                        </div>

                        <!-- Validation Errors below the form fields -->
                        <div>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>


                    }


                </div>
            </div>
        </div>
    </div>


    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Include jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Link to SweetAlert2 library -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    @if (TempData["ErrorMessage"] != null)
    {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
        Swal.fire({
            icon: 'info',

            text: '@TempData["ErrorMessage"]',
            showConfirmButton: true,
            customClass: {
                popup: 'swal2-popup', // Apply custom class to the popup
            }
        }).then((result) => {
            if (result.isConfirmed) {
               // Show the preloader when the user confirms
                showLoadingScreen();

                // Redirect after showing the message
                window.location.href = '@Url.Action("Index", "Login")';
            }
        });
        </script>
    }


    @*Preloader script*@
    <script type="text/javascript">
        function preventBack() {
            window.history.forward();
        }
        setTimeout("preventBack()", 0);

    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            showLoadingScreen();

        });

        window.addEventListener('load', function () {
            // Delay hiding the preloader to ensure it's displayed even on fast loads
            setTimeout(hideLoadingScreen, 500); // 500ms delay before hiding
        });

        function showLoadingScreen() {
            document.getElementById('loadingScreen').style.display = 'flex';
        }

        function hideLoadingScreen() {
            document.getElementById('loadingScreen').style.display = 'none';
        }
    </script>
    @*Preloader script*@
</body>
</html>
