@model IEnumerable<PSS_CMS.Models.Ticket>
@{
    Layout = null;
}

@{
    // Decode JavaScript string
    Func<string, string> DecodeJavaScriptString = (input) =>
    {
        if (input == null) return string.Empty;  // Return empty string if input is null

return input.Replace("\\\"", "\"")        // Double quotes
                    .Replace("\\'", "'")         // Single quotes
                    .Replace("\\(", "(")         // Parenthesis
                    .Replace("\\)", ")")
                    .Replace("\\[", "[")         // Square brackets
                    .Replace("\\]", "]")
                    .Replace("\\,", ",")         // Comma
                    .Replace("\\.", ".")         // Period
                    .Replace("\\\\", "\\")       // Backslash
                    .Replace("\\n", "\n")        // Newline
                    .Replace("\\r", "\r");       // Carriage return
};
}


@using GridMvc.Html
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    <link href="~/Content/ClientSide.css" rel="stylesheet" />
    <link href="~/Content/Style1.css" rel="stylesheet" />

    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />

    <script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

    <!-- Bootstrap Icons and Boxicons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="~/Content/Responsive.css" rel="stylesheet" />
    <!-- Toastr CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />

    <!-- jQuery (required by Toastr) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <style>
        #ticetscreen {
            overflow-x: hidden;
        }

        select#statusDropdown {
            font-size: 15px;
            background-color: white;
            border-bottom: 2px solid white;
            padding: 5px;
        }
    </style>



</head>

<body id="ticetscreen" onload="hideLoadingScreen()">
    <div id="loadingScreen">
        <div class="loader"></div>
    </div>
    <div class="">

        <nav class="nav d-flex">
            <div class="p-2 flex-grow-1">
                <h3 style="margin-top:10px" class="heading ms-3">TICKET SYSTEM</h3>
            </div>

            <div class="p-2" style="margin-right:10px">
                <h4 class="heading">@Session["UserName"].ToString().ToUpper()</h4>
            </div>

            <div class="p-2 me-3 dropdown">
                <a href="#" class="text-decoration-none" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class='bx bx-user-circle' style="font-size:24px !important; color:purple !important;"></i>
                </a>

                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                    <li><a class="dropdown-item" href="@Url.Action("FAQ", "UserManager")">FAQ</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" href="@Url.Action("UserDashboardCount", "UserManager")">DashBoard</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li>
                        <a href="@Url.Action("Logout", "Login")" class="text-decoration-none dropdown-item text-danger" id="logoutlink" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">
                            Logout    <i class='bx bx-log-out' style="font-size:24px !important;color:red !important;"></i>

                        </a>
                    </li>

                </ul>
            </div>
        </nav>







        <div class="content" style="margin-left:0px;">

            <div class="row" style="margin-top:10px">
                <div class="col-lg-12 col-sm-12">
                    <ul class="breadcrumb mt-1" style="margin-bottom:0px!important">
                        <li class="resticketclresbreadcrumb" style="color: #2888bb;text-decoration:none"><a href="@Url.Action("Ticket_History", "UserManager")">USER MANAGER</a></li>
                        <li class="resticketclresbreadcrumb" style="color: #2888bb;text-decoration:none"><a href="@Url.Action("Ticket_History", "UserManager")">TICKET HISTORY</a></li>

                        <li class="resticketclresbreadcrumb" style="color: #2888bb;">REVIEW TICKETS</li>
                    </ul>
                </div>
            </div>

            <div class="ms-4">
                @foreach (var ticket in Model) // Single loop to iterate through tickets
                {
                    <!-- Raised Ticket Row -->
                    <div class="row mt-1">
                        <div class="col-md-12">
                            <div class="row mb-2">
                                <div class="col-md-4">
                                    <h4>
                                        <b><u>TICKET RAISED</u></b><span style="font-size:17px;"> By:@ticket.TC_USERNAME</span>

                                    </h4>

                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <label><b>User Comments</b></label>
                                    @*@Html.Label("Comments", new { @class = "pb-2" })*@
                                    @*<p class="" readonly>@ticket.TC_COMMENTS</p>*@
                                    <p class="readonly">@Html.Raw(DecodeJavaScriptString(ticket.TC_COMMENTS))</p>

                                </div>
                                <div class="col-md-4">
                                    <p class="" readonly><b>@Convert.ToDateTime(ticket.TC_TICKETDATE).ToString("dd/MM/yyyy HH:mm")</b></p>
                                </div>
                            </div>


                            @*<div class="col-md-5">
                                    @if (!string.IsNullOrEmpty(ticket.TC_REQUEST_ATTACHMENT_PREFIX))
                                    {
                                        <img src="data:image/png;base64,@ticket.TC_REQUEST_ATTACHMENT_PREFIX" alt="Ticket Image" class="img-fluid logical" />
                                    }
                                </div>*@


                            @if (!string.IsNullOrEmpty(ticket.TC_REQUEST_ATTPREFIX))
                            {
                                string base64String = ticket.TC_REQUEST_ATTPREFIX;

                                // Infer file type from Base64 prefix
                                string fileType = "";
                                string mimeType = "";
                                if (base64String.StartsWith("iVBORw0KGgo")) // PNG file signature
                                {
                                    fileType = "png";
                                    mimeType = "image/png";
                                }
                                else if (base64String.StartsWith("/9j/")) // JPG/JPEG file signature
                                {
                                    fileType = "jpg";
                                    mimeType = "image/jpeg";
                                }
                                else if (base64String.StartsWith("JVBER")) // PDF file signature
                                {
                                    fileType = "pdf";
                                    mimeType = "application/pdf";
                                }
                                else if (base64String.StartsWith("UEsDB")) // XLSX or DOCX file signature (ZIP format)
                                {
                                    fileType = "xlsx"; // Default to XLSX
                                    mimeType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";

                                    // Further checking if it's DOCX (DOCX and XLSX share the same initial ZIP signature)
                                    if (base64String.Contains("word/"))
                                    {
                                        fileType = "docx";
                                        mimeType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
                                    }
                                }
                                else if (base64String.StartsWith("U1RB") || base64String.StartsWith("R2V0")) // TXT file signature
                                {
                                    fileType = "txt";
                                    mimeType = "text/plain";
                                }
                                else if (base64String.StartsWith("AAAAFGZ0eXB")) // MP4 file signature
                                {
                                    fileType = "mp4";
                                    mimeType = "video/mp4";
                                }
                                else if (base64String.StartsWith("AAAAGGZ0eXBt")) // MP4 file signature
                                {
                                    fileType = "mp4";
                                    mimeType = "video/mp4";
                                }
                                else if (base64String.StartsWith("Q0N2")) // CSV file signature
                                {
                                    fileType = "csv";
                                    mimeType = "text/csv";
                                }
                                else
                                {
                                    fileType = "unknown";
                                    mimeType = "application/octet-stream"; // Default for unknown file types
                                }


                                // Show image preview if it's an image (png, jpg, jpeg)
                                if (mimeType.StartsWith("image/"))
                                {
                                    <div class="row">
                                        <div class="col-7">
                                            <img src="data:@mimeType;base64,@ticket.TC_REQUEST_ATTPREFIX"
                                                 alt="Ticket Image" class="img-fluid"
                                                 data-toggle="modal" data-target="#modal_@ticket.TC_RECID" />
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-2">
                                            <button style="margin:20px" type="button" class="btn btn-primary" data-toggle="modal" data-target="#modals_@ticket.TC_RECID">
                                                Preview
                                            </button>

                                            <!-- Modal for Image Preview -->
                                            <div class="modal fade fullscreen-modal" id="modals_@ticket.TC_RECID" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                <div class="modal-dialog modal-xl" role="document">
                                                    <div class="custom modal-content imagewidth">
                                                        <div class="modal-body">
                                                            <img src="data:@mimeType;base64,@ticket.TC_REQUEST_ATTPREFIX" alt="Ticket Image" class="img-fluid logical" />
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">
                                                                Close
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    // Show download button for non-image files
                                    <div class="row">
                                        <div class="col-2">
                                            <a href="data:@mimeType;base64,@ticket.TC_REQUEST_ATTPREFIX"
                                               download="Attachment.@fileType"
                                               class="btn btn-success" style="margin:10px">
                                                Download
                                            </a>
                                        </div>
                                    </div>
                                }
                            }







                        </div>
                    </div>

                    <!-- Response Ticket Row -->
                    <div class="row mt-4">
                        <div class="col-md-12">

                            @if (ticket.TC_RESPONSE_DATETIME != null)
                            {
                                <div class="row mb-2">
                                    <div class="col-md-4">
                                        <h4><b><u>RESPONSED</u></b><span style="font-size:17px;"> By:@ticket.TC_ADMINNAME</span></h4>

                                    </div>

                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-4">
                                        <label><b>Admin Comments</b></label>
                                        <p class="">@ticket.TC_RESPONSECOMMENTS</p>
                                    </div>
                                    <div class="col-md-4">
                                        <p class=""> <b>@Convert.ToDateTime(ticket.TC_RESPONSE_DATETIME).ToString("dd/MM/yyyy HH:mm")</b></p>
                                    </div>
                                </div>

                                if (!string.IsNullOrEmpty(ticket.TC_RESPONSE_ATTPREFIX))
                                {
                                    string base64String = ticket.TC_RESPONSE_ATTPREFIX;

                                    // Detect file type from Base64 prefix
                                    string fileType = "";
                                    string mimeType = "";

                                    if (base64String.StartsWith("iVBORw0KGgo")) // PNG file signature
                                    {
                                        fileType = "png";
                                        mimeType = "image/png";
                                    }
                                    else if (base64String.StartsWith("/9j/")) // JPG/JPEG file signature
                                    {
                                        fileType = "jpg";
                                        mimeType = "image/jpeg";
                                    }
                                    else if (base64String.StartsWith("JVBER")) // PDF file signature
                                    {
                                        fileType = "pdf";
                                        mimeType = "application/pdf";
                                    }
                                    else if (base64String.StartsWith("UEsDB")) // XLSX or DOCX file signature (ZIP format)
                                    {
                                        fileType = "xlsx"; // Default to XLSX
                                        mimeType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";

                                        // Further checking if it's DOCX (DOCX and XLSX share the same initial ZIP signature)
                                        if (base64String.Contains("word/"))
                                        {
                                            fileType = "docx";
                                            mimeType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
                                        }
                                    }
                                    else if (base64String.StartsWith("U1RB") || base64String.StartsWith("R2V0")) // TXT file signature
                                    {
                                        fileType = "txt";
                                        mimeType = "text/plain";
                                    }
                                    else if (base64String.StartsWith("Q0N2")) // CSV file signature
                                    {
                                        fileType = "csv";
                                        mimeType = "text/csv";
                                    }
                                    else if (base64String.StartsWith("AAAAFGZ0eXB")) // MP4 file signature
                                    {
                                        fileType = "mp4";
                                        mimeType = "video/mp4";
                                    }
                                    else if (base64String.StartsWith("AAAAGGZ0eXBt")) // MP4 file signature
                                    {
                                        fileType = "mp4";
                                        mimeType = "video/mp4";
                                    }
                                    else
                                    {
                                        fileType = "unknown";
                                        mimeType = "application/octet-stream"; // Default for unknown file types
                                    }


                                    // If it's an image, show the preview
                                    if (mimeType.StartsWith("image/"))
                                    {
                                        <div class="row">
                                            <div class="col-7">
                                                <img src="data:@mimeType;base64,@ticket.TC_RESPONSE_ATTPREFIX"
                                                     alt="Response Ticket Image" class="img-fluid"
                                                     data-toggle="modal" data-target="#modal_@ticket.TC_RECID" />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-2">
                                                <button style="margin:20px" type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalpreview_@ticket.TC_RECID">
                                                    Preview
                                                </button>

                                                <!-- Modal for Image Preview -->
                                                <div class="modal fade" id="modalpreview_@ticket.TC_RECID" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                    <div class="modal-dialog" role="document">
                                                        <div class="custom modal-content imagewidth">
                                                            <div class="modal-body">
                                                                <img src="data:@mimeType;base64,@ticket.TC_RESPONSE_ATTPREFIX" alt="Response Ticket Image" class="img-fluid logical" />
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">
                                                                    Close
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        // If it's a PDF, XLSX, or TXT, show the Download button
                                        <div class="row">
                                            <div class="col-2">
                                                <a href="data:@mimeType;base64,@ticket.TC_RESPONSE_ATTPREFIX"
                                                   download="Attachment.@fileType"
                                                   class="btn btn-success" style="margin:10px">
                                                    Download
                                                </a>
                                            </div>
                                        </div>
                                    }
                                }



                            }

                        </div>
                    </div>


                }
            </div>


            <!-- Response Ticket Form -->
            <!-- Status Update Form -->

            @{ var lastStatus = Session["Status"]?.ToString();
            }

            @if (lastStatus != "C" && lastStatus != "O")
            {


                <div class="col-md-12 mt-2">

                    @{

                        Html.RenderPartial("_UserManagerResponse", new PSS_CMS.Models.Ticket());  // Pass the single ticket to the partial view

                    }

                </div>
            }
            else
            {

            }



            <div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel" style="height: 150px;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title text-align-center" id="offcanvasBottomLabel"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="d-flex flex-column justify-content-center align-items-center">
                    <h4>Are you sure you want to log out?</h4>
                </div>
                <div class="offcanvas-footer d-flex justify-content-center">
                    <input type="button" class="btncolorsubmit me-3" id="confirmLogoutBtn" value="Confirm" tabindex="1">
                    <input type="button" class="btncolorcancel" data-bs-dismiss="offcanvas" value="Cancel" tabindex="2">
                </div>
            </div>






        </div>
    </div>

    <!-- LogOut JS -->
    <script src="~/Scripts/Logoutjs.js"></script>


    <script>
        function updateDateTime() {
            let now = new Date();

            // Format Date as DD/MM/YYYY
            let date = now.toLocaleDateString("en-GB"); // 'en-GB' gives DD/MM/YYYY format

            // Format Time as HH:MM:SS
            let time = now.toLocaleTimeString(); // This gives HH:MM:SS in 24-hour format

            // Combine Date & Time
            let formattedDateTime = `${date} ${time}`;

            // Set the formatted date-time inside the <p> tag
            document.getElementById("responseDateTime").innerText = formattedDateTime;
        }

        // Run the function immediately and update it every second
        updateDateTime(); // Initial call
        setInterval(updateDateTime, 1000); // Update every 1 second
    </script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    @*Preloader script*@
    <script type="text/javascript">
        function preventBack() {
            window.history.forward();
        }
        setTimeout("preventBack()", 0);

    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            showLoadingScreen();

        });

        window.addEventListener('load', function () {
            // Delay hiding the preloader to ensure it's displayed even on fast loads
            setTimeout(hideLoadingScreen, 500); // 500ms delay before hiding
        });

        function showLoadingScreen() {
            document.getElementById('loadingScreen').style.display = 'flex';
        }

        function hideLoadingScreen() {
            document.getElementById('loadingScreen').style.display = 'none';
        }
    </script>
    @*Preloader script*@
    <script src="~/Scripts/Inactivitylogout.js"></script>
</body>
</html>
