@model PSS_CMS.Models.Reviewtickets
@{
    Layout = null;
}
@using GridMvc.Html
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <link href="~/Content/Style.css" rel="stylesheet" />
   
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    @*Bootstrap Icons and Boxicons link*@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="..." crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>

<body id="ticetscreen">


    <div class="sidebar">
        <a class="  text-decoration-none" href="@Url.Action("Ticket","Tickets")">New Tickets</a>
        <a href="@Url.Action("Ticket_History","Tickets")" class="text-decoration-none">Ticket History</a>

        <a href="@Url.Action("Logout", "Login")" class="text-decoration-none align-baseline" id="logoutlink" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">
            <i class='bx bx-log-out' style="font-size:24px !important;color:red !important;"></i>
            Logout
        </a>

    </div>
    <nav class="nav">
        <h3 class="" id="navheading">TICKET SYSTEM</h3>
    </nav>
    <div class="content mt-2">

        <div class="row" style="margin-top:10px">
            <div class="col-lg-9 col-sm-8">
                <ul class="breadcrumb">
                    <li style="color: #2888bb;">REVIEW TICKETS</li>

                </ul>
            </div>


        </div>
        <div class="row">
            <div class="col-md-6">
                @*Form 1*@

                <form>
                    <h3>Rasied Ticket</h3>
                    <div class="row">
                        <div class="col-md-5 col-sm-5">
                            @Html.LabelFor(model => model.TC_TICKETDATES, "Date:", new { @class = "pb-2" })
                            @Html.TextBoxFor(model => model.TC_TICKETDATES, new { @class = "form-control", @readonly = "true", id = "dateTextbox" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.TC_COMMENTS, "Comments", new { @class = "pb-2" })
                            @Html.TextAreaFor(model => model.TC_COMMENTS, new { @class = "form-control custom-textarea", rows = "10", cols = "70", @readonly = "true" })
                        </div>
                        @*<div class="col-md-12 mt-2">
                                @Html.Label("myfile", "Preview:")
                                <input type="file" id="myfile" name="myfile" />
                            </div>*@

                        <div class="col-md-12 mt-3">
                            <h2 class="mt-2">Image Preview</h2>
                            @if (ViewBag.AdminTicketsIMAGE != null)
                            {
                                <img src="data:image/png;base64,@ViewBag.AdminTicketsIMAGE" alt="Ticket Image" class="img-fluid" style="width:550px;height:350px;" />
                            }
                        </div>


                    </div>

                </form>
            </div>
            <div class="col-md-6">
                @*Form 1*@
                <h3>Responsed Ticket</h3>
                <form>
                    <div class="row">
                        <div class="col-md-5 col-sm-5">
                            @Html.LabelFor(model => model.TC_RESPONSE_DATETIMES, "Date:", new { @class = "pb-2" })
                            @Html.TextBoxFor(model => model.TC_RESPONSE_DATETIMES, new { @class = "form-control", @readonly = "true", id = "dateTextbox" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.TC_RESPONSE_COMMENTS, "Comments", new { @class = "pb-2" })
                            @Html.TextAreaFor(model => model.TC_RESPONSE_COMMENTS, new { @class = "form-control custom-textarea", rows = "10", cols = "70", @readonly = "true" })
                        </div>
                        <div class="col-md-12 mt-2">
                            <h2 class="mt-2">Image Preview</h2>
                            @if (ViewBag.AdminTicketsIMAGE2 != null)
                            {
                                <img src="data:image/png;base64,@ViewBag.AdminTicketsIMAGE2" alt="Ticket Image" class="img-fluid" style="width:550px;height:350px;" />
                            }
                        </div>

                    </div>

                </form>
            </div>
            <div class="col-md-6 mt-5">
                @*Form 2*@
                @using (Html.BeginForm("ClientResponseTicket", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <form>
                        <div class="row">
                            @*<div class="col-md-5">
                                    @Html.LabelFor(model => model.Combo, "Status", new { @class = "pb-2" })
                                    @Html.DropDownListFor(model => model.Combo,
                                 new SelectList(new List<string> { "ReOpen", "Close" }),
                                 "Please select an option",
                                 new { @class = "form-select" })
                                </div>*@

                            <div class="col-md-5">
                                @Html.LabelFor(model => model.Combo, "Status", new { @class = "pb-2" })
                                @Html.DropDownListFor(model => model.Combo,
                                    new SelectList(new List<string> { "ReOpen", "Close" }),
                                    "Please select an option",
                                    new { @class = "form-select", @id = "statusDropdown", onchange = "sendStatus()" })
                            </div>


                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.TC_COMMENTS, "Comments", new { @class = "pb-2" })
                                @Html.TextAreaFor(model => model.TC_COMMENTS, new { @class = "form-control custom-textarea", placeholder = "Please enter your comments here....", rows = "10", cols = "70" })
                            </div>
                            <div class="col-md-12 mt-2">
                                @Html.Label("myfile", "Attachments:")
                                <input type="file" id="myfile" name="myfile" />
                            </div>
                            <div class="col-md-12 mt-2 d-flex justify-content-end">
                                <button type="submit" class="btn btn-success me-3">Submit</button>
                                <button type="button" class="btn btn-danger" onclick="window.location.href='@Url.Action("Ticket_History", "Tickets")'">Cancel</button>
                            </div>
                        </div>

                    </form>
                }
            </div>
        </div>




        <div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel" style="height: 150px;">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title text-align-center" id="offcanvasBottomLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body d-flex flex-column justify-content-center align-items-center">
                <h4>Are you sure you want to log out?</h4>
            </div>
            <div class="offcanvas-footer d-flex justify-content-center">
                <input type="button" class="btn btn-success me-3" id="confirmLogoutBtn" value="Confirm" tabindex="1">
                <input type="button" class="btn btn-danger" data-bs-dismiss="offcanvas" value="Cancel" tabindex="2">
            </div>
        </div>

    </div>


    <!-- LogOut JS -->
    <script src="~/Scripts/Logoutjs.js"></script>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const sidebarLinks = document.querySelectorAll(".sidebar a");

            let activeLinkFound = false;

            // Highlight the active link based on the current URL path
            sidebarLinks.forEach(link => {
                if (link.pathname === window.location.pathname) {
                    link.classList.add("active");
                    activeLinkFound = true; // Mark as found
                }
            });

            // Set "New Tickets" as default if no active link matches
            if (!activeLinkFound) {
                const defaultLink = document.querySelector('.sidebar a.default-active');
                if (defaultLink) {
                    defaultLink.classList.add("active");
                }
            }

            // Add click event to update the active class
            sidebarLinks.forEach(link => {
                link.addEventListener("click", function () {
                    // Remove active class from all links
                    sidebarLinks.forEach(l => l.classList.remove("active"));

                    // Add active class to the clicked link
                    this.classList.add("active");
                });
            });
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    @*<script>
        function sendStatus() {
            console.log("hai");
            var status = document.getElementById("statusDropdown").value;
            var param = status === "ReOpen" ? "O" : (status === "Close" ? "C" : "");
            console.log(param);
            if (param !== "") {
                console.log("if works");
                // Send data to the controller using AJAX
                $.ajax({

                    url: '/Tickets/ClientResponseTicket', // Replace with your actual controller/action
                    type: 'POST',
                    data: { statusparam: param },

                    success: function (response) {
                        console.log(response);
                        console.log(data);
                        console.log("Status updated successfully!", response);
                    },
                    error: function (error) {
                        console.error("Error updating status.", error);
                    }
                });
            }
        }
    </script>*@

</body>
</html>


