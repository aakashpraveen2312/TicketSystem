@model PSS_CMS.Models.CompanyInfo
@using GridMvc.Html
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    <link href="~/Content/ClientSide.css" rel="stylesheet" />
    <link href="~/Content/Style1.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    <link href="~/Content/FooterResponsive.css" rel="stylesheet" />


    @*Bootstrap Icons and Boxicons*@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <script src="~/Scripts/Script.js"></script>
    <link href="~/Content/Responsive.css" rel="stylesheet" />
    <link href="~/Content/Colors.css" rel="stylesheet" />
    <link href="~/Content/SideMenu.css" rel="stylesheet" />
    <style>
        .swal-btn-continue {
            background-color: #6ed3d0 !important;
            color: white !important;
            border-radius: 5px;
            padding: 8px 20px;
            font-weight: bold;
        }

        .swal-btn-back {
            background-color: #f0a72d !important;
            color: white !important;
            border-radius: 5px;
            padding: 8px 20px;
            font-weight: bold;
        }

        select#TUG_NAME {
            display: block;
            width: 100%;
            height: 34px;
            padding: 6px 12px;
            font-size: 14px;
            line-height: 1.42857143;
            color: #555;
            background-image: none;
            border: 1px solid #ccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
            -webkit-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
            -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
            -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
            transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
            transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
            transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
        }
        .image-container {
            width: 205px;
            height: 100px; /* Ensuring consistent height */
            display: flex;
            justify-content: center;
            align-items: center;
            border: 1px dashed #ccc; /* Optional border */
            margin: 10px auto;
        }

            .image-container img {
                width: 220px;
                height: 150px;
                object-fit: contain;
            }
    </style>
</head>

<body>

    <div class="content" style=" overflow-x: hidden!important;">
        <nav class="nav d-flex">
            <div class="p-2 flex-grow-1"> <h3 style="margin-top:10px" class="heading ms-3 adminheadinres">TICKET SYSTEM</h3></div>
            <div class="p-2" style="margin-right:10px"><h4 class="heading adminlogoutres">@Session["UserName"].ToString().ToUpper()</h4></div>
            <div class="p-2 me-3 logout" style="margin-right:10px" data-toggle="tooltip" data-placement="bottom" title="Log out">
                <a href="@Url.Action("Logout", "Login")" class="text-decoration-none" id="logoutlink" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">
                    <i class='bx bx-log-out' style="font-size:24px;color:red !important;" id="logoutresiconadmin"></i>
                </a>
            </div>

        </nav>
        <div class="row" style="margin-top:10px">
            <div class="col-lg-12">
                <ul class="breadcrumb mt-1" style="margin-bottom:0px!important">
                    <li>SECURITY</li>
                    <li class="" style="color: #2888bb;text-decoration:none">COMPANY INFO</li>
                </ul>
            </div>
        </div>

        <div class="scroll-wrapper" style="overflow-x:hidden;">

            <div class="create ms-4 me-2 mt-3">
                <div class="row mb-3">
                    <div class="col-lg-2 col-md-2 col-sm-12">
                        @Html.LabelFor(model => model.C_CODE, new { @class = "labels" })
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-12">
                        @Html.EditorFor(model => model.C_CODE, new { htmlAttributes = new { @class = "form-control textboxcolors", autocomplete = "off", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.C_CODE, "", new { @class = "text-danger" })

                    </div>
                </div>


                <div class="row mb-3">
                    <div class="col-lg-2 col-md-2 col-sm-12">
                        @Html.LabelFor(model => model.C_NAME, new { @class = "labels" })
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-12">
                        @Html.EditorFor(model => model.C_NAME, new { htmlAttributes = new { @class = "form-control textboxcolors", autocomplete = "off", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.C_NAME, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-lg-2 col-md-2 col-sm-12">
                        @Html.LabelFor(model => model.C_EMAILID, new { @class = "labels" })
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-12">
                        @Html.EditorFor(model => model.C_EMAILID, new { htmlAttributes = new { @class = "form-control textboxcolors", autocomplete = "off", @readonly = "readonly" } })

                    </div>
                </div>


                <div class="row mb-3">
                    <div class="col-lg-2 col-md-2 col-sm-12">
                        @Html.LabelFor(model => model.C_PHONE, new { @class = "labels" })
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-12">
                        @Html.EditorFor(model => model.C_PHONE, new { htmlAttributes = new { @class = "form-control integerboxcolors", autocomplete = "off", @readonly = "readonly" } })

                    </div>
                </div>


                <div class="row mb-3">
                    <div class="col-lg-2 col-md-2 col-sm-12">
                        @Html.LabelFor(model => model.C_ADDRESS, new { @class = "labels" })
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-12">
                        @Html.EditorFor(model => model.C_ADDRESS, new { htmlAttributes = new { @class = "form-control textboxcolors", autocomplete = "off", @readonly = "readonly" } })

                    </div>
                </div>

                @using (Html.BeginForm("UpdateLogo", "CompanyInfo", FormMethod.Post, new { id = "createform", enctype = "multipart/form-data" }))
                {

                    <div class="row mb-3">
                        <div class="col-lg-2 col-md-2 col-sm-12">
                            @Html.LabelFor(model => model.C_LOGO, new { @class = "labels" })
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-12">
                            <h6 style="text-align:center">Preview</h6>
                            <div class="image-container">

                                @if (!string.IsNullOrEmpty(Model.C_LOGO))
                                {

                                    <img id="gstPreview" class="img-thumbnail mt-2"
                                         src="@(string.IsNullOrEmpty(ViewBag.GstImageBase64) ?
                                                    (Model.C_LOGO.Contains("data:image/") ?
                                                    Model.C_LOGO : (Model.C_LOGO.StartsWith("/") ||
                                                    Model.C_LOGO.StartsWith("iVBORw0KGgo") ? "data:image/png;base64," : "data:image/jpeg;base64,") +
                                                    Model.C_LOGO) : "data:image/png;base64," + ViewBag.imageGst)"
                                         style="width: 100%; height: 100%; display: block;" /> }
                                else
                                {
                                    <img id="gstPreview" class="img-thumbnail mt-2"
                                         style="width: 100%; height: 100%; display: none;" />}
                            </div>
                            <input type="file" id="C_LOGO" name="C_LOGO" class="form-input"
                                   accept="image/*" onchange="previewImage('C_LOGO', 'gstPreview'); showLabels();" />
                            <input type="hidden" name="ExistingGstImage" value="@ViewBag.imageGst" />
                        </div>
                    </div>


                    <div class="row ">
                        <div class="col-lg-2">

                        </div>
                        <div class="col-lg-3 d-flex justify-content-end">
                            <input type="submit" value="Save" class="submitbuttons me-3" tabindex="" id="savebutton" />
                            <input type="button" value="Cancel" class="cancelbuttons" tabindex="" id="" onclick="window.location.href='@Url.Action("Info", "CompanyInfo")'" />
                        </div>
                    </div>
                }



            </div>
            @{
                var locations = ViewBag.LocationList as IEnumerable<PSS_CMS.Models.Locations>;
            }
            <div class="row" style="margin-top:10px">
                <div class="col-lg-12">
                    <ul class="breadcrumb mt-1" style="margin-bottom:0px!important">
                        <li class="" style="color: #2888bb;text-decoration:none">LOCATIONS</li>
                    </ul>
                </div>
            </div>
            <div class="table mt-3 ms-1 me-5" id="ticketTable1">

                @if (locations != null)
                {
                    @Html.Grid(locations).Columns(columns =>
               {
                   columns.Add(c => c.L_CODE).Titled("Code").SetWidth("100px");
                   columns.Add(c => c.L_NAME).Titled("Location").SetWidth("350px");
                   columns.Add(c => c.L_SORTORDER).Titled("Sort").SetWidth("80px").Css("text-right");
               }).WithPaging(10).Sortable(false)
                }
                else
                {
                    <div class="alert alert-warning text-center">
                        <b>No Locaions's are available</b>
                    </div>}

            </div>
            <footer>
                <div class="footer">
                    <div class="flex-container" style="padding-top:5px;padding-left:5px">

                        @*<div class="flex-item">
                            <div class="d-flex justify-content-center footerb">
                                <span class="minicheck minicheck1"></span>
                                - Text Fields
                            </div>
                        </div>*@

                        <div class="flex-item">
                            <div class="d-flex justify-content-center footerb">
                                <span class="minicheck minicheck3"></span>
                                - Read Only
                            </div>
                        </div>

                    </div>
                </div>
            </footer>

        </div>

       





        <!-- Validation Errors below the form fields -->


        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>

    </div>

    





    <div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel" style="height: 150px;">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title text-align-center" id="offcanvasBottomLabel"></h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body d-flex flex-column justify-content-center align-items-center">
            <h4>Are you sure you want to log out?</h4>
        </div>
        <div class="offcanvas-footer d-flex justify-content-center">
            <input type="button" class="btncolorsubmit me-3" id="confirmLogoutBtn" value="Confirm" tabindex="1">
            <input type="button" class="btncolorcancel" data-bs-dismiss="offcanvas" value="Cancel" tabindex="2">
        </div>
    </div>



    <div id="preloader2"></div>
    <!-- LogOut JS -->
    <script src="~/Scripts/Logoutjs.js"></script>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    @*Logout Pronptbox script*@
    <script>
    document.getElementById("logoutLink").addEventListener("click", function () {
        Swal.fire({
            title: "Are you sure you want to log out?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Confirm",
            cancelButtonText: "Cancel",
            confirmButtonColor: "#28a745",
            cancelButtonColor: "#dc3545",
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '@Url.Action("Logout", "Login")';
            }
        });
    });
    </script>

    <script>
    $(document).ready(function () {
        $("#createform").submit(function (event) {
            event.preventDefault();

            var submitBtn = $("#savebutton");
            submitBtn.prop("disabled", true).text("Submitting...");

            var formData = new FormData(this);

            // Disable page interaction
            $("body").css("pointer-events", "none");

            $.ajax({
                url: '@Url.Action("UpdateLogo", "CompanyInfo")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.status === "success") {
                        Swal.fire({
                            title: "Success!",
                            text: response.message,
                            icon: "success",
                            confirmButtonText: "Ok",
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            customClass: {
                                confirmButton: "swal-btn-continue",
                            },
                            didOpen: () => {
                                $(".swal2-container").css("pointer-events", "auto");
                            }
                        }).then((result) => {
                            window.location.href = '@Url.Action("Info", "CompanyInfo")';
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: response.message,
                            icon: "error",
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        });
                        resetButton();
                    }
                },
                error: function () {
                    Swal.fire({
                        title: "Error!",
                        text: "An unexpected error occurred.",
                        icon: "error",
                        allowOutsideClick: false,
                        allowEscapeKey: false
                    });
                    resetButton();
                }
            });

            function resetButton() {
                submitBtn.prop("disabled", false).text("Submit");
                $("body").css("pointer-events", "auto");
            }
        });
    });
    </script>
</body>

</html>


