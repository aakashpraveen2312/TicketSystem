@model PSS_CMS.Models.Changepassword
@using GridMvc.Html

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <link href="~/Content/ClientSide.css" rel="stylesheet" />
    <link href="~/Content/Style1.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    @*Bootstrap Icons and Boxicons link*@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="..." crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="~/Content/SideMenu.css" rel="stylesheet" />
    <script src="~/Scripts/Script.js"></script>
    <link href="~/Content/FooterResponsive.css" rel="stylesheet" />
</head>
<body id="ticetscreen">

    <div class="">

        <div class="content">
            <nav class="nav d-flex">
                <div class="p-2 flex-grow-1"> <h3 style="margin-top:10px" class="heading ms-3 ">SERVICE MANAGEMENT</h3></div>
                <div class="p-2" style="margin-right:10px"><h4 class="heading">@Session["UserName"].ToString().ToUpper() - @Session["Role"]</h4></div>
                <div class="p-2 me-3" style="margin-right:10px" data-toggle="tooltip" data-placement="bottom" title="Log out">
                    <a href="@Url.Action("Logout", "Login")" class="text-decoration-none" id="logoutlink" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">
                        <i class='bx bx-log-out' style="font-size:24px !important;color:red !important;"></i>

                    </a>
                </div>
            </nav>
            <div class="row" style="margin-top:10px">
                <div class="col-lg-12 col-sm-12">
                    <ul class="breadcrumb">

                        <li style="color: #2888bb;">SECURITY</li>
                        <li style="color: #2888bb;">CHANGE PASSWORD</li>

                    </ul>
                </div>

            </div>
            @using (Html.BeginForm("ChangePassword", "ChangePassword", FormMethod.Post, new { id = "editform", enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="col-md-4 ms-3">
                        @Html.LabelFor(model => model.U_NewPassword, "New Password", new { @class = "pb-2" })
                        @Html.PasswordFor(model => model.U_NewPassword, new { @class = "form-control  minicheck1", id = "Newpassword" })
                        @Html.ValidationMessageFor(model => model.U_NewPassword, "", new { @class = "text-danger" })

                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-4 ms-3">
                        @Html.LabelFor(model => model.U_Changepassword, "Confirm Password", new { @class = "pb-2" })
                        @Html.PasswordFor(model => model.U_Changepassword, new { @class = "form-control  minicheck1", id = "confirmPassword" })
                        @Html.ValidationMessageFor(model => model.U_Changepassword, "", new { @class = "text-danger" })

                        @*<span id="passwordMatchMessage" class="text-danger"></span>*@
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>

                <div class="row mt-2">
                    <div class="col-md-4 mt-2 d-flex justify-content-end">
                        <button type="submit" class="submitbuttons me-3" id="savebutton" tabindex="7">Submit</button>
                        <button type="button" class="cancelbuttons" onclick="window.location.href='@Url.Action("Dashboard","DashBoard")'" tabindex="8">
                            Cancel
                        </button>
                    </div>
                </div>
            }
            <footer>
                <div class="footer">
                    <div class="flex-container" style="padding-top:5px;padding-left:5px">

                        <div class="flex-item">
                            <div class="d-flex justify-content-center footerb">
                                <span class="minicheck minicheck1"></span>
                                - Text Fields
                            </div>
                        </div>

                    </div>
                </div>
            </footer>

            <div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel" style="height: 150px;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title text-align-center" id="offcanvasBottomLabel"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body d-flex flex-column justify-content-center align-items-center">
                    <h4>Are you sure you want to log out?</h4>
                </div>
                <div class="offcanvas-footer d-flex justify-content-center">
                    <input type="button" class="btncolorsubmit me-3" id="confirmLogoutBtn" value="Confirm" tabindex="1">
                    <input type="button" class="btncolorcancel" data-bs-dismiss="offcanvas" value="Cancel" tabindex="2">
                </div>
            </div>
        </div>

    </div>

    <!-- LogOut JS -->
    <script src="~/Scripts/Logoutjs.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var img = document.getElementById("ticketImage");
            img.onload = function () {
                console.log("Image Loaded Successfully");
            };
        });

    </script>

    <script>
    @* Script for active menu *@

    document.addEventListener("DOMContentLoaded", function () {
        const sidebarLinks = document.querySelectorAll(".sidebar a");

        // Highlight the active link based on the current URL
        sidebarLinks.forEach(link => {
            if (link.href === window.location.href) {
                link.classList.add("active");
            }
        });

        // Add click event to update the active class
        sidebarLinks.forEach(link => {
            link.addEventListener("click", function () {
                // Remove active class from all links
                sidebarLinks.forEach(l => l.classList.remove("active"));

                // Add active class to the clicked link
                this.classList.add("active");
            });
        });
    });


    @* Script for dropdown *@

        document.addEventListener("DOMContentLoaded", function () {
            const dropdownBtn = document.querySelector(".dropdown-btn");
        const dropdownContainer = document.querySelector(".dropdown-container");

        dropdownBtn.addEventListener("click", function () {
            this.classList.toggle("active");
        dropdownContainer.style.display = dropdownContainer.style.display === "block" ? "none" : "block";
            });
        });


        @* Script for deep dropdown *@
        document.addEventListener("DOMContentLoaded", function () {
            const deepDropdown = document.querySelector(".deep-dropdown");
            const deepSubmenu = deepDropdown.querySelector(".deep-submenu");

            deepDropdown.addEventListener("mouseenter", function () {
                deepSubmenu.style.display = "block";
            });

            deepDropdown.addEventListener("mouseleave", function () {
                deepSubmenu.style.display = "none";
            });
        });


    </script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    @*Toastr for created succesfully*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
    $(document).ready(function () {
        $("#editform").submit(function (event) {
            event.preventDefault();

            var submitBtn = $("#savebutton");
            submitBtn.prop("disabled", true);

            var formData = new FormData(this);

           
            // Disable page interaction
            $("body").css("pointer-events", "none");

            $.ajax({
                url: '@Url.Action("ChangePassword", "ChangePassword")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {

                        // 🔹 Show SweetAlert loading dialog
                        Swal.fire({
                            title: "Processing...",
                            html: "Please wait while we save your changes.",
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            didOpen: () => {
                                Swal.showLoading(); // show spinner
                            }
                        });

                        // ⏳ After small delay, show success popup
                        setTimeout(function () {
                        Swal.fire({
                            title: "Success!",
                            text: response.message,
                            icon: "success",
                            confirmButtonText: "Ok",
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            customClass: {
                                confirmButton: "swal-btn-continue",
                            },
                            didOpen: () => {
                                $(".swal2-container").css("pointer-events", "auto");
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '@Url.Action("Index", "Login")';
                            }
                        });
                        }, 1000); // 1 second delay for "Processing"
                    } else {
                        Swal.fire({
                            title: "Message",
                            text: response.message,
                            icon: "info",
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        });
                        resetButton();
                    }
                },
                error: function () {
                    Swal.fire({
                        title: "Error!",
                        text: "An unexpected error occurred.",
                        icon: "error",
                        allowOutsideClick: false,
                        allowEscapeKey: false
                    });
                    resetButton();
                }
            });
        });

        function resetButton() {
            $("#savebutton").prop("disabled", false).text("Submit");
            $("body").css("pointer-events", "auto");
        }
    });
    </script>

    @*<script>
        document.addEventListener("DOMContentLoaded", function () {
            const newPassword = document.getElementById("Newpassword");
            const confirmPassword = document.getElementById("confirmPassword");
            const message = document.getElementById("passwordMatchMessage");
            const submitBtn = document.getElementById("savebutton");

            function checkPasswordMatch() {
                if (confirmPassword.value === "") {
                    message.textContent = "";
                    submitBtn.disabled = true;
                    submitBtn.style.cursor = "not-allowed";
                } else if (newPassword.value === confirmPassword.value) {
                    message.textContent = "Passwords match";
                    message.classList.remove("text-danger");
                    message.classList.add("text-success");
                    submitBtn.disabled = false;
                    submitBtn.style.cursor = "pointer";
                } else {
                    message.textContent = "Passwords doesn't match";
                    message.classList.remove("text-success");
                    message.classList.add("text-danger");
                    submitBtn.disabled = true;
                    submitBtn.style.cursor = "not-allowed";
                }
            }

            newPassword.addEventListener("keyup", checkPasswordMatch);
            confirmPassword.addEventListener("keyup", checkPasswordMatch);
        });
    </script>*@
</body>
</html>
