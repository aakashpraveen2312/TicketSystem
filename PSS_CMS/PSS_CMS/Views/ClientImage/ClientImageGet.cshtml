@{ ViewBag.Title = "Client Section";
    Layout = null;
    var Client = Session["PS_CLIENT_TYPE"] as string; }

@using GridMvc.Html

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <link href="~/Content/Style1.css" rel="stylesheet" />
    <link href="~/Content/MainMenuTicket.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    @*Bootstrap Icons and Boxicons link*@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="..." crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  
</head>

<body>
    <div class="sidebar">
        <a class="text-decoration-none" href="@Url.Action("RecentTicket","RecentTickets")">Recent Tickets</a>
        <a href="@Url.Action("Clients","RecentTickets")" class="text-decoration-none">Client</a>
        <a href="javascript:void(0);" class="dropdown-btn text-decoration-none">CMS <i class="bi bi-chevron-down dropdown-btn"></i></a>
        <div class="dropdown-container">
            <a href='@Url.Action("Index","RecentTickets")' class="text-decoration-none">Menu</a>
            <a href='@Url.Action("HomeMainContent","RecentTickets")' class="text-decoration-none">Home</a>
            <div class="text-decoration-none servicemenu">
                <a href='@Url.Action("SubmenuForServices","RecentTickets")' class="text-decoration-none">
                    Services<i class="bi bi-chevron-down dropdown-btns"></i>
                </a>
                <div class="submenu" id="submenu-services">
                    <a href='@Url.Action("SubmenuForHRMS","RecentTickets")' class="text-decoration-none">HRMS....</a>

                </div>
            </div>
            <a href='@Url.Action("Clients","RecentTickets")' class="text-decoration-none">Clients</a>
            <a href='@Url.Action("ClientImageGet","ClientImage", new { section = "Client Section"})' class="text-decoration-none">Client Section</a>
            <a href="#clients" class="text-decoration-none">Gallery</a>
            <a href="#clients" class="text-decoration-none">FAQ</a>
            <a href="#clients" class="text-decoration-none">About</a>
            <a href='@Url.Action("Clients","RecentTickets")' class="text-decoration-none">Contact Us</a>


        </div>
        <a href="@Url.Action("Logout", "Login")" class="text-decoration-none align-baseline" id="logoutlink" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">
            <i class='bx bx-log-out' style="font-size:24px !important;color:red !important;"></i>
            Logout
        </a>
    </div>

    <nav class="nav">
        <h3 class="" id="navheading">TICKET SYSTEM</h3>
    </nav>
    <div class="content">

        <div class="row mt-2">
            <div class="col-lg-9 col-sm-8">
                <ul class="breadcrumb mt-3">
                    <li><a href="@Url.Action("Index", "Home")">Site</a> </li>
                    <li>@Session["ContentName"]</li>
                </ul>
            </div>
        </div>
        <div class="container-fluid ms-0">
            <div class="row g-2 d-flex justify-content-center">
                @using (Html.BeginForm("HomePageClientSectionSave", "ClientImage", FormMethod.Post, new { id = "form", enctype = "multipart/form-data" }))
                {
                    <div class="container-fluid mt-5 ms-0">
                        <!-- Main Section -->
                        @if (!string.IsNullOrEmpty(Client))
                        {
                            if (Client == "IMAGES")
                            {
                                <div class="row g-2 d-flex justify-content-center">
                                    <h3 class="d-flex justify-content-center">Images In Client Section</h3>
                                    <div class="card shadow-lg overflow-hidden">
                                        <div class="card-body">
                                            <div class="col-12 row">
                                                @if (ViewBag.MainContentImages != null)
                                                {
                                                    var mainContentImages = ViewBag.MainContentImages as List<string>;

                                                    // Add a hidden input for PS_RECID
                                                    <input type="hidden" name="PS_RECID" value="@Session["PS_CLIENT_RECID"]" />

                                                    for (int i = 0; i < 8; i++)
                                                    {
                                                        <div class="col-12 col-md-4 mb-3">
                                                            <div class="card">
                                                                <div class="card-body">
                                                                    <div class="d-flex justify-content-center align-items-center mb-2">
                                                                        <img id="imageclients_@i" src="@(i < mainContentImages.Count ? $"data:image/jpeg;base64,{mainContentImages[i]}" : "https://via.placeholder.com/200")"
                                                                             class="img-fluid animated-client" alt="Image @i" />
                                                                    </div>
                                                                    <div class="d-flex justify-content-between align-items-center">

                                                                        <input type="file" name="imageFiles" id="image_@i" class="form-control" accept="image/*" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    // Add a hidden input for PS_RECID
                                                    <input type="hidden" name="PS_CLIENT_RECID" value="@Session["PS_CLIENT_RECID"]" id="imageclientexisting" />

                                                    for (int i = 0; i < 8; i++)
                                                    {
                                                        <div class="col-12 col-md-4 mb-3">
                                                            <div class="card">
                                                                <div class="card-body">
                                                                    <div class="d-flex justify-content-center align-items-center mb-2">
                                                                        <img src="https://via.placeholder.com/200" class="img-fluid animated" alt="Placeholder @i" />
                                                                    </div>
                                                                    <div class="d-flex justify-content-between align-items-center">
                                                                        <label for="image_@i">Upload Image @i</label>
                                                                        <input type="file" name="imageFiles" id="image" class="form-control" accept="image/*" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>

                                        <!-- Form footer for Save/Cancel -->
                                        <div class="d-flex justify-content-end gap-2 mb-3">
                                            <button class="btn btn-success login" type="submit">Save</button>
                                            <button class="btn btn-danger login" type="button" onclick="window.location.href='@Url.Action("Index", "Home")'">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        <!-- End of Main Section -->
                    </div>
                }

            </div>
        </div>
    </div>









    <div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel" style="height: 150px;">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title text-align-center" id="offcanvasBottomLabel"></h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body d-flex flex-column justify-content-center align-items-center">
            <h4>Are you sure you want to log out?</h4>
        </div>
        <div class="offcanvas-footer d-flex justify-content-center">
            <input type="button" class="btn btn-success me-3" id="confirmLogoutBtn" value="Confirm" tabindex="1">
            <input type="button" class="btn btn-danger" data-bs-dismiss="offcanvas" value="Cancel" tabindex="2">
        </div>
    </div>



    <!-- LogOut JS -->
    <script src="~/Scripts/Logoutjs.js"></script>


    <script>
    @* Script for active menu *@

    document.addEventListener("DOMContentLoaded", function () {
        const sidebarLinks = document.querySelectorAll(".sidebar a");

        // Highlight the active link based on the current URL
        sidebarLinks.forEach(link => {
            if (link.href === window.location.href) {
                link.classList.add("active");
            }
        });

        // Add click event to update the active class
        sidebarLinks.forEach(link => {
            link.addEventListener("click", function () {
                // Remove active class from all links
                sidebarLinks.forEach(l => l.classList.remove("active"));

                // Add active class to the clicked link
                this.classList.add("active");
            });
        });
    });


    @* Script for dropdown *@

        document.addEventListener("DOMContentLoaded", function () {
            const dropdownBtn = document.querySelector(".dropdown-btn");
        const dropdownContainer = document.querySelector(".dropdown-container");

        dropdownBtn.addEventListener("click", function () {
            this.classList.toggle("active");
        dropdownContainer.style.display = dropdownContainer.style.display === "block" ? "none" : "block";
            });
        });


    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Attach event listeners dynamically to all file inputs
            document.querySelectorAll('input[type="file"]').forEach((input, index) => {
                input.addEventListener("change", function (event) {
                    const file = event.target.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            // Update the corresponding image preview
                            const imagePreview = document.getElementById(`imageclients_${index}`);
                            imagePreview.src = e.target.result;
                            // Clear the hidden field when a new file is selected
                            const hiddenField = document.getElementById("imageclientexisting");
                            if (hiddenField) hiddenField.value = "";
                        };
                        reader.readAsDataURL(file); // Convert file to base64 string
                    }
                });
            });
        });
    </script>




</body>
</html>










