@model PSS_CMS.Models.TimelineResponse
@using System.Text.Json
@using Newtonsoft.Json
@{ 
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    <link href="~/assets/img/bexlogo_wob.png" rel="icon">
    <link href="~/assets/img/bexlogo_wob.png" rel="apple-touch-icon">
    <title>BEYONDEXS - SERVICE MANAGEMENT</title>

    <link href="~/Content/Style.css" rel="stylesheet" />
    <link href="~/Content/ClientSide.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="..." crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment"></script>
    <link href="~/Content/Responsive.css" rel="stylesheet" />

    <!-- Toastr CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />

    <!-- jQuery (required by Toastr) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
</head>

<body id="ticetscreen">
    <nav class="nav d-flex">
        <div class="p-2 flex-grow-1">
            <h3 style="margin-top:10px" class="heading ms-3">SERVICE MANAGEMENT</h3>
        </div>

        <div class="p-2" style="margin-right:10px">
            <h4 class="heading">@Session["UserName"].ToString().ToUpper()-@Session["Role"]</h4>
        </div>

        <div class="p-2 me-3 dropdown">
            <a href="#" class="text-decoration-none" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <i class='bx bx-user-circle' style="font-size:24px !important; color:purple !important;"></i>
            </a>

            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                <li><a class="dropdown-item" href="@Url.Action("FAQ", "Tickets")">FAQ</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="@Url.Action("UserDashboardCount", "UserDashboard")">DashBoard</a></li>
                <li><hr class="dropdown-divider"></li>
                <li>
                    <a href="@Url.Action("Logout", "Login")" class="text-decoration-none dropdown-item text-danger" id="logoutlink" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">
                        Logout    <i class='bx bx-log-out' style="font-size:24px !important;color:red !important;"></i>

                    </a>
                </li>

            </ul>
        </div>
    </nav>
    <div class="content">
        <div class="row" style="margin-top:10px">
            <div class="col-lg-12 col-sm-12">
                <ul class="breadcrumb mt-2">
                    <li class="resticTimelinegraph" style="color: #2888bb;text-decoration:none"><a href="@Url.Action("Ticket_History", "Tickets")">TICKET HISTORY</a></li>

                    <li class="resticTimelinegraph" style="color: #2888bb;">TIMELINE CHART</li>

                </ul>
            </div>


        </div>
        <div class="card shadow rounded p-5">
            <h3 class="text-center restimelinegrpahheding" style="font-weight:bold;">Ticket Time Line Chart - @Session["UserName"]</h3>
            <canvas id="statusChart" height="500"></canvas>
        </div>


        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <script>
            var ctx = document.getElementById('statusChart').getContext('2d');

var statusMapping = { "Created": 1, "Resolved": 2, "ReOpen": 3, "Closed": 4 };

// Parse model data from Razor model
var chartData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TicketTimeline));

            /*var labels = chartData.map(item => new Date(item.date).toLocaleString());*/
            var labels = chartData.map(item => {
                var date = new Date(item.date);
                var day = String(date.getDate()).padStart(2, '0');
                var month = String(date.getMonth() + 1).padStart(2, '0');
                var year = date.getFullYear();
                var hours = String(date.getHours()).padStart(2, '0');
                var minutes = String(date.getMinutes()).padStart(2, '0');
                var seconds = String(date.getSeconds()).padStart(2, '0');
                return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;
            });
            // Reverse labels and data to display bottom-to-top on Y axis
            labels.reverse();
            chartData.reverse();

var statusValues = chartData.map(item => statusMapping[item.status]);

// Determine segment and point colors based on status transitions
            var borderColors = statusValues.map((value, index) => {
                console.log(value, index, "value,Index");
    if (index === 0) return 'blue'; // Initial state
                const prevValue = statusValues[index - 1];
                console.log(prevValue,"prevValue")
                if (prevValue === 3 && value === 2) return 'darkorange'; // Resolved to ReOpen
                if (prevValue === 4 && value === 3) return 'darkred'; // ReOpen to Closed
                if (prevValue === 4 && value === 2) return 'red'; // Resolved to Closed
                if (prevValue === 2 && value === 1) return 'darkmagenta'; // Created to Resolved
                if (prevValue === 2 && value === 3) return 'darkgreen'; // ReOpen to Resolved
                if (prevValue === 4 && value === 1) return 'yellow'; // Created to Closed
    return 'blue'; // Default
});

new Chart(ctx, {
    type: 'line',
    data: {
        labels: labels,
        datasets: [{
            label: 'Ticket Status Timeline',
            data: statusValues,
            borderWidth: 2,
            fill: false,
            tension: 0.3,
            pointRadius: 6,
            pointHoverRadius: 8,
            pointBackgroundColor: borderColors,
            pointBorderColor: borderColors, // Ensure point borders match
            segment: {
                borderColor: (ctx) => {
                    const index = ctx.p0DataIndex;
                    return borderColors[index];
                }
            }
        }]
    },
    options: {
        indexAxis: 'y', // Switch x and y axes
        plugins: {
            legend: {
                display: false
            },
            tooltip: {
                callbacks: {
                    label: function (tooltipItem) {
                        const index = tooltipItem.dataIndex;
                        const status = chartData[index].status;
                        const username = chartData[index].Username;
                        if (status === "Resolved" || status === "Closed") {
                            return `Status: ${status}, By: ${username}`;
                        }
                        return `Status: ${status}`;
                    }
                }
            }
        },
        scales: {
            y: {
                title: {
                    display: true,
                    text: 'Date & Time',
                    font: {
                        size: 14,
                        weight: 'bold'
                    },
                    color: 'black'

                },
                type: 'category',
                border: {
                    color: 'black',
                    width: 2// X-axis border color
                }
            },
            x: {
                title: {
                    display: true,
                    text: 'Status',
                    font: {
                        size: 14,
                        weight: 'bold'
                    },
                    color: 'black'
                },
                ticks: {
                    stepSize: 1,
                    callback: function (value) {
                        return Object.keys(statusMapping).find(key => statusMapping[key] === value);
                    }
                },
                border: {
                    color: 'black',
                    width:2// Y-axis border color
                }
            }
        }
    }
});


        </script>

        <div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel" style="height: 150px;">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title text-align-center" id="offcanvasBottomLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body d-flex flex-column justify-content-center align-items-center">
                <h4>Are you sure you want to log out?</h4>
            </div>
            <div class="offcanvas-footer d-flex justify-content-center">
                <input type="button" class="btncolorsubmit me-3" id="confirmLogoutBtn" value="Confirm" tabindex="1">
                <input type="button" class="btncolorcancel" data-bs-dismiss="offcanvas" value="Cancel" tabindex="2">
            </div>
        </div>


    </div>

    <!-- LogOut JS -->
    <script src="~/Scripts/Logoutjs.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/Inactivitylogout.js"></script>
</body>
</html>

